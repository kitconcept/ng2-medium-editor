{"version":3,"sources":["MediumContentEditor.es6"],"names":["MediumContentEditor","selector","template","Reflect","metadata","elementRef","ngControl","value","instance","valueAccessor","editor","destroy","config","configFile","System","import","then","res","editorInit","MediumEditor","host","nativeElement","editable","elements","subscribe","event","innerHTML","onChange","change","emit","viewToModelUpdate","vlaue","nextSibling","setAttribute","_","fn","onTouched"],"mappings":"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","file":"MediumContentEditor.js","sourcesContent":["// Imports\nimport {\n    Component,\n    Directive,\n    Input,\n    Output,\n    ElementRef,\n    ViewChild,\n    Optional,\n    OptionalMetadata,\n    EventEmitter\n} from '@angular/core';\nimport {NgControl, ControlValueAccessor} from '@angular/forms';\n\n/**\n * MediumEditor component\n * Usage :\n * <textarea [(ngModel)]=\"data\" [config]=\"{...}\" configFile=\"file.js\"></textarea>\n */\n@Component({\n    selector: 'meditor.editable',\n    template: `<textarea #host></textarea>`\n})\n@Reflect.metadata('parameters', [null, [Optional()]])\nexport class MediumContentEditor {\n\n    @Input() config;\n    @Input() configFile;\n\n    @Output() change = new EventEmitter();\n    @ViewChild('host') host;\n\n    value = '';\n    instance = null;\n    ngControl;\n\telementRef;\n\n\n    /**\n     * Constructor\n     */\n    constructor(elementRef:ElementRef, ngControl:NgControl){\n        if( ngControl ){\n            ngControl.valueAccessor = this;\n            this.ngControl = ngControl;\n        }\n\tthis.elementRef = elementRef;\n    }\n\n    /**\n     * On component destroy\n     */\n    ngOnDestroy(){\n        if( this.editor ) {\n            // this.instance.removeAllListeners();\n            this.editor.destroy();\n            this.editor = null;\n        }\n    }\n\n    /**\n     * On component view init\n     */\n    ngAfterViewInit(){\n        // Configuration\n        var config = {};\n\n        // Fetch file\n        if( this.configFile ){\n\n            if( System && System.import ){\n                System.import(this.configFile)\n                    .then((res) => {\n                        this.editorInit( res.config );\n                    })\n            }\n\n        // Config object\n        }else{\n            config = this.config || {};\n            this.editorInit( config );\n        }\n    }\n\n    /**\n     * Editor init\n     */\n    editorInit( config ){\n\n\tthis.editor = new MediumEditor(this.host.nativeElement, config);\n\n\n\t        // Change event\n\tlet editable =  this.editor.elements[0];\n            this.editor.subscribe('editableInput',  (event, editable)=> {\n                          let value =this.editor.elements[0].innerHTML;\n\n\t\t\t    // This doesn't work ???\n\t\t\t    this.onChange( value );\n\t\t\t    this.change.emit( value );\n\t\t\t    this.ngControl.viewToModelUpdate(value);\n\n            });\n\n\n    }\n\n    /**\n     * Hack to update model\n     */\n    hackUpdate(){\n        if( this.editor ){\n            var value = this.vlaue;\n            this.ngControl.viewToModelUpdate(value);\n            //this.onChange( value );\n            this.change.emit( value );\n        }\n    }\n\n    /**\n     * Implements ControlValueAccessor\n     */\n    writeValue(value){\n        this.value = value;\n\n        if( this.editor ){\n\t\tif(value && value != \"\"){\n\t\t\tthis.editor.elements[0].nextSibling.value=value;\n\t\t   \tthis.editor.elements[0].innerHTML=(value);\n\t\t\tthis.editor.elements[0].setAttribute(\"data-placeholder\",\"\");\n\t\t}else{\n\t\t\tthis.editor.elements[0].nextSibling.value=null;\n\t\t   \tthis.editor.elements[0].innerHTML=\"\";\n\t\t\tthis.editor.elements[0].setAttribute(\"data-placeholder\",\"\");\n\t\t}\n\t}\n    }\n    onChange(_){}\n    onTouched(){}\n    registerOnChange(fn){this.onChange = fn;}\n    registerOnTouched(fn){this.onTouched = fn;}\n}\n"]}